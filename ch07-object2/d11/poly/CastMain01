package com.d11.poly;

//부모 클래스
class Parent{
	public void printMsg() {
		System.out.println("printMsg");
	}
}

class A extends Parent{
	
	//클래스 재정의
	@Override
	public void printMsg() {
		System.out.println("make");
	}
}
class B extends Parent{
	@Override
	public void printMsg() {
		System.out.println("play");
	}
}
class C extends Parent{
	@Override
	public void printMsg() {
		System.out.println("fun");
	}
}

class D extends Parent{
	@Override
	public void printMsg() {
		System.out.println("take");
	}
}
class E extends Parent{
	@Override
	public void printMsg() {
		System.out.println("get");
	}
}
public class CastMain01 {
	public void add(Parent p) {
		p.printMsg();
	}
	public static void main(String[] args) {
		CastMain01 cm = new CastMain01();
//		cm.add(new Parent());
		cm.add(new A());//A->Parent 업캐스팅
		cm.add(new B());//B->Parent 업캐스팅
		cm.add(new C());//B->Parent 업캐스팅
		cm.add(new D());//D->Parent 업캐스팅
		cm.add(new E());
		

		
		/*
		 * add라는 메소드에 A~E까지 추가한 후
		 * p가 A~E까지 반환을 하면
		 * A~E안에있는 메소드의 재정의된 printMsg가 호출됨
		 */
	}

}
