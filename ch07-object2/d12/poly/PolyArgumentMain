package com.d12.poly;


//부모 클래스
class Product{
	int price;//제품의 가격
	int bonusPoint;//제품 구매시 제공하는 보너스 점수
	
	public Product() {
		
	}
	public Product(int price) {
		this.price = price;
		bonusPoint = price/10;//보너스 점수는 제품 가격의 10프로 줌
	}
	public String getName() {
		return "";
	}
}

//자식 클래스
class Tv extends Product{//인자가 없는 기본생성자를 만들어주어야함 //그래야 에러 안남
	public Tv() {
		super(100);//Tv의 가격은 100만원으로 지정
		//super()라는건 생성자를 의미
		//생성자에게 값을 반환
		//생성자의 부모클래스에게 반환시킨다고 생각하면 될듯
	}
	//Product의 getName메소드 재정의
	@Override
	public String getName() {
		return "Tv";
	}
	
}
class Computer extends Product{
	public Computer() {
		super(200);//Computer의 가격을 200만원으로한다
		//생성자에게 값을 반환
				//생성자의 부모클래스에게 반환시킨다고 생각하면 될듯
	}
	@Override
	public String getName() {
		return "Computer";
	}
}
class Audio extends Product{
	public Audio() {
		super(300);
	}
	@Override
	public String getName() {
		return "Audio";
	}
}
//class Radio extends Product{
//	public Radio() {
//		super(1000);
//	}
//	public String getName() {
//		return "Radio";
//	}
//}
class Buyer{//고객, 물건을 사는 사람
	private int money = 1000;//보유금액
	private int bonusPoint = 0;
	
	//구매하기 메소드
	public void buy(Product p) {//Tv, Computer 타입이 다르니까 업캐스팅을 통하여 가느아게 함
		if(money< p.price) {
			System.out.println("잔액이 부족하여 물건을 살 수 없습니다.");
			return;
		}
		money -= p.price;
		bonusPoint += p.bonusPoint;//제품의 보너스 점수를 나의 보너스 점수에 추가하는것
		System.out.println(p.getName()+"을 구입하셨습니다.");
		System.out.println("현재 남은 돈은 "+money+"만원 입니다.");
		System.out.println("현재 보너스 점수는 "+bonusPoint+"점 입니다.");
	}
}
public class PolyArgumentMain {
	public static void main(String[] args) {
		Buyer b = new Buyer();
		Tv tv = new Tv();
//		Radio rd = new Radio();
		Computer cp = new Computer();
		Audio ad = new Audio();
		b.buy(tv);;//Tv -> product 업캐스팅
		b.buy(cp);//Computer -> product 업캐스팅
		b.buy(ad);//Audio ->product 업캐스팅
	}

}
